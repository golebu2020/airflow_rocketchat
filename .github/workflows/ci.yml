name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main # This will trigger the workflow on push to the 'main' branch.
    tags:
      - 'v*'

  workflow_dispatch: # Allows manually triggering the workflow from the GitHub UI

env:
  GITHUB_REGISTRY: ghcr.io
  IMAGE_TAG: 'v1.2.3'

jobs:
  first-job:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      # - name: Log in to GitHub Container Registry
      #   run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Redis
        run: |
          docker pull redis:latest

      - name: Test Redis Image
        uses: ./.github/actions/scan-docker-image
        with:
          image: redis:latest

      - name: Set Versions
        uses: actions/github-script@v4
        id: set_version
        with:
          script: |
            const tag = context.ref.substring(10)
            const no_v = tag.replace('v', '')

  second-job:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: read
      security-events: write

    steps:
      - uses: actions/checkout@v3

      - name: Test First Image
        uses: ./.github/actions/scan-docker-image
        with:
          image: airflow-image1:latest
          category: nginx-image1-scan
          path-to-dockerfile: ./Dockerfile

      - name: Test Second Image
        uses: ./.github/actions/scan-docker-image
        with:
          image: airflow-image2:latest
          category: nginx-image2-scan
          path-to-dockerfile: ./Dockerfile
